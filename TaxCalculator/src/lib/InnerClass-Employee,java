package lib;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class Employee {

    private String employeeId;
    private String firstName;
    private String lastName;
    private String idNumber;
    private String address;

    private LocalDate dateJoined;
    private boolean isForeigner;
    private boolean isMale;
	
	private int monthlySalary;
	private int otherMonthlyIncome;
	private int annualDeductible;
	
	private Spouse spouse;
    private List<Child> children = new ArrayList<>();
	
	public Employee(String employeeId, String firstName, String lastName, String idNumber, String address, LocalDate dateJoined, boolean isForeigner, boolean isMale) {
        this.employeeId = employeeId;
        this.firstName = firstName;
        this.lastName = lastName;
        this.idNumber = idNumber;
        this.address = address;
        this.dateJoined = dateJoined;
        this.isForeigner = isForeigner;
        this.isMale = isMale;
    }

    public void setMonthlySalary(int grade) {
        int salary = switch (grade) {
            case 1 -> 3000000;
            case 2 -> 5000000;
            case 3 -> 7000000;
            default -> throw new IllegalArgumentException("Invalid grade: " + grade);
        };
        monthlySalary = isForeigner ? (int) (salary * 1.5) : salary;
    }
	
	public void setAnnualDeductible(int deductible) {
        this.annualDeductible = deductible;
    }

    public void setAdditionalIncome(int income) {
        this.otherMonthlyIncome = income;
    }

    public void setSpouse(Spouse spouse) {
        this.spouse = spouse;
    }

    public void addChild(Child child) {
        children.add(child);
    }

    public int getAnnualIncomeTax() {
        LocalDate now = LocalDate.now();
        int monthsWorkingInYear = (now.getYear() == dateJoined.getYear())
                ? now.getMonthValue() - dateJoined.getMonthValue()
                : 12;
        return TaxFunction.calculateTax(monthlySalary, otherMonthlyIncome, monthsWorkingInYear, annualDeductible, spouse == null, children.size());
    }

    private static class Spouse {
        private final String name;
        private final String idNumber;

        public Spouse(String name, String idNumber) {
            this.name = name;
            this.idNumber = idNumber;
        }
    }

    private static class Child {
        private final String name;
        private final String idNumber;

        public Child(String name, String idNumber) {
            this.name = name;
            this.idNumber = idNumber;
        }
    }

